# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json
language: 'ko-KR' # 리뷰 언어 설정
early_access: true # 얼리 액세스 기능 활성화

# 리뷰 톤 및 스타일 지정
tone_instructions: |
  당신은 TypeScript, React 19, Vite, Vanilla Extract, TanStack Query 전문가입니다.
  특히 다음 기술들에 대한 깊은 이해를 가지고 있습니다:
  - React 19의 최신 기능과 패턴
  - Vanilla Extract를 활용한 CSS-in-JS 스타일링
  - TanStack Query를 활용한 서버 상태 관리
  - Vite 빌드 시스템과 성능 최적화

  한국어로 명확하고 건설적인 코드 리뷰를 제공하되,
  중요한 문제가 아닌 한 간결하게 작성해주세요.
  보안, 성능, 유지보수성에 중점을 두고 리뷰해주세요.

reviews:
  profile: 'assertive' # 리뷰 스타일: assertive(엄격), chill(관대)
  request_changes_workflow: false
  high_level_summary: true # PR 요약 생성
  poem: false # 시(POEM) 생성 비활성화
  review_status: true # 리뷰 상태 표시
  assess_linked_issues: true # 연결된 이슈 분석
  related_prs: true # 관련 PR 표시
  suggested_labels: true # 라벨 자동 제안
  sequence_diagrams: true # 시퀀스 다이어그램 생성
  changed_files_summary: true # 변경된 파일 요약

  # 프로젝트 특화 규칙
  custom_rules: |
    - 모든 컴포넌트는 반드시 TypeScript로 작성되어야 함
    - SVG는 ?react 쿼리를 통해 React 컴포넌트로 임포트
    - 스타일은 반드시 Vanilla Extract(.css.ts)로 작성
    - 절대 경로 임포트 사용 (@pages, @shared 등)
    - overlay-kit을 통한 모달 관리 패턴 준수

  # 커밋 메시지 및 브랜치 패턴
  commit_patterns: |
    커밋 타입 확인:
    - feat, fix, docs, style, refactor, test, chore, design, comment, rename, remove

    브랜치 패턴 확인:
    - type/description/#issue-number 형식 준수

  # 파일 경로 필터링 (프로젝트 구조에 맞춘 설정)
  path_filters:
    - '!node_modules/**'
    - '!dist/**'
    - '!storybook-static/**'
    - '!build/**'
    - '!coverage/**'
    - '!*.lock'
    - '!pnpm-lock.yaml'
    - '!.storybook/vitest.setup.ts'
    - 'src/**'
    - '.storybook/**/*.ts'
    - 'vite.config.ts'
    - 'tsconfig*.json'

  # 경로별 특별 지침
  path_instructions:
    - path: 'src/shared/components/**'
      instructions: |
        공통 컴포넌트 리뷰 시 다음 사항을 중점적으로 검토해주세요:
        - TypeScript 타입 정의의 정확성과 제네릭 활용
        - 높은 재사용성을 위한 props 설계
        - 성능 최적화 (memo, useMemo, useCallback)
        - 일관된 API 디자인과 명명 규칙
        - 접근성(a11y) 준수

    - path: 'src/pages/**/components/**'
      instructions: |
        페이지별 컴포넌트 리뷰 시:
        - 해당 페이지의 도메인 로직과 긴밀한 결합 확인
        - 재사용 가능한 컴포넌트는 shared로 이동 제안
        - 페이지 특화 타입과 상수의 적절한 활용 확인

    - path: 'src/**/*.css.ts'
      instructions: |
        Vanilla Extract 스타일 파일 리뷰 시:
        - 디자인 토큰(colorVars, fontVars) 활용 확인
        - recipe 패턴의 적절한 사용
        - 반응형 스타일 구현 방식
        - 불필요한 중복 스타일 제거

    - path: 'src/shared/apis/**'
      instructions: |
        API 레이어 리뷰 시:
        - axiosInstance의 일관된 사용
        - TanStack Query 훅과의 적절한 통합
        - 에러 처리 패턴의 일관성
        - 타입 안정성 확보

    - path: '**/*.stories.tsx'
      instructions: |
        Storybook 스토리 리뷰 시:
        - 모든 props 변형에 대한 스토리 작성
        - a11y 테스트 통과 여부
        - 적절한 문서화와 컨트롤 제공

  auto_review:
    enabled: true # 자동 리뷰 활성화
    drafts: false # 드래프트 리뷰 사용 여부
    ignore_title_keywords: # 특정 키워드가 포함된 PR 제목 무시
      - '[docs]'
      - '[skip-review]'

  # 보안 및 성능 규칙
  security_rules: |
    - 환경 변수는 반드시 import.meta.env 사용
    - API 키나 시크릿을 하드코딩하지 않음
    - axios 인터셉터를 통한 토큰 관리 확인

  performance_rules: |
    - React.memo, useMemo, useCallback의 적절한 사용
    - 큰 번들 사이즈 경고 (dynamic import 제안)
    - Vanilla Extract의 정적 스타일 생성 활용

  # TypeScript/React 환경에 최적화된 도구들 (실제 사용하는 것만)
  tools:
    eslint:
      enabled: true # TypeScript/React 린팅
    languagetool:
      enabled: true # 한국어 문법 검사
      level: 'default'
    markdownlint:
      enabled: true # 문서 품질 검사
    gitleaks:
      enabled: true # 보안 비밀 정보 스캔
    yamllint:
      enabled: true # YAML 파일 검증
    actionlint:
      enabled: true # GitHub Actions 검증

# 채팅 설정
chat:
  auto_reply: true # AI 자동 답변 활성화

# 지식 베이스 설정
knowledge_base:
  web_search:
    enabled: true # 웹 검색 기능 활성화

  # 프로젝트 특화 정보
  project_specific: |
    - React 19 사용 중 (React import 불필요)
    - PNPM 패키지 매니저 사용
    - Node 22.x 환경
    - Vitest + Playwright 테스트 환경
    - Chromatic을 통한 시각적 회귀 테스트
    - 도메인 중심 설계 (각 페이지가 독립적인 도메인)
    - 절대 경로 사용 (@pages, @shared 등)

# 코드 생성 설정
code_generation:
  enabled: true # 코드 생성 기능 활성화
  docstrings:
    enabled: true
    language: 'ko-KR' # 독스트링을 한국어로 생성
  unit_tests:
    enabled: true # 유닛 테스트 생성 활성화
